function paramOpt(circuito, x, filename, score, runNumber, result_parts, score_parts)
% paramOpt - Writes best parameter set to a custom output file for LTspice simulation
%
% Saves the optimized parameters for the Gagabiro Valve Power Amplifier into a
% specified parameter file (e.g., 'paramop', 'paramopT'), with optional score and run info.
%
% INPUTS:
%   circuito        - Name or path to the circuit folder (string)
%   x               - Vector of optimized parameter values
%   filename        - Name of the output file (e.g., 'paramop')
%   score           - (Optional) Score value to log as comment
%   runNumber       - (Optional) Run number to log as comment
%   result_parts    - (Optional) Simmulation results vector
%   score_parts     - (Optional) scoreAv results vector
%
% Author: JoÃ£o Victor Colombari Carlet
% Contact: jvccarlet@usp.br

warning('off', 'all');

slash = filesep;

if nargin == 0
    error('You need to specify the sile path, the gene vector and the mode: tran, ac, slew or gedlee');
end

% --- Delete old param file if it exists ---
outfile = [circuito slash filename];
if exist(outfile, "file")
    delete(outfile);
end

% --- Open new file for writing ---
arq = fopen(outfile, 'w');

% --- Write file header ---
fprintf(arq, ['***************************************\n' ...
              '*** GAGABIRO VALVE POWER AMPLIFIER ***\n' ...
              '*** AUTHOR:  JOAO CARLET            ***\n' ...
              '*** CONTACT: JVCCARLET@USP.BR       ***\n' ...
              '***************************************\n\n']);

% Optional score and run info
if nargin >= 6
    fprintf(arq, ['*** Best Solution Summary\t***\n' ...
                  '*** Run #%d | Score = %.4g ***\n\n' ...
                  '* Gain = %.2fdB (Score = %.2f)\n' ...
                  '* Output Power = %.2fW (Score = %.2f)\n' ...
                  '* THD = %.4f%% (Score = %.2f)\n' ...
                  '* Std Dev (Freq Response) = %.2f dB (Score = %.2f)\n' ...
                  '* Low Cutoff = %.2f Hz (Score = %.2f)\n' ...
                  '* High Cutoff = %.2f Hz (Score = %.2f)\n' ...
                  '* Slew Rate = %.2f V/us (Score = %.2f)\n' ...
                  '* GedLee Score = %.2f (Score = %.2f)\n\n'], ...
    runNumber, score, result_parts(2), score_parts(2), ...
    result_parts(3), score_parts(3), result_parts(4), score_parts(4), ...
    result_parts(5), score_parts(5), result_parts(6), score_parts(6), ...
    result_parts(7), score_parts(7), result_parts(8), score_parts(8), ...
    result_parts(9), score_parts(9));
end

fprintf(arq, '\n');

% --- Write resistor parameters (X1 to X18) ---
fprintf(arq, '* RESISTORS\n');
for i = 1:18
    fprintf(arq, '.param      X%d = %g\n', i, x(i));
end

% --- Write capacitor parameters (X19 to X23) ---
fprintf(arq, '\n* CAPACITORS\n');
for i = 19:23
    fprintf(arq, '.param      X%d = %g\n', i, x(i));
end

% --- Write power supply voltages (X24 and X25) ---
fprintf(arq, '\n* VOLTAGE SOURCES\n');
for i = 24:25
    fprintf(arq, '.param      X%d = %g\n', i, x(i));
end

% --- Write commented tran section ---
src = [
    '\n*** TRAN SIMULATION SETUP\n' ...
    '* SOURCES\n' ...
    '*V4 V_PP 0 {int(X24)}\n' ...
    '*V5 V_in 0 SINE(0 0.447 1k) AC 1\n' ...
    '*V1 V_grid 0 {int(X25)}\n'];
cmd = [
    '\n* COMMANDS\n' ...
    '*.OPTIONS numdgt=7\n' ...
    '*.OPTIONS plotwinsize=0\n' ...
    '*.four 1k 10 V(out)\n' ...
    '*.tran 0 100m 0 10u\n' ...
    '*.probe v(out) i(Rload) v(v_in)\n' ...
    '*.meas tran output_power RMS I(RLoad)*v(out)\n' ...
    '*.meas TRAN Vout_rms RMS V(out)\n' ...
    '*.meas TRAN Vin_rms  RMS V(v_in)\n' ...
    '*.meas TRAN Gain_rms PARAM Vout_rms/Vin_rms\n'];
fprintf(arq, src);
fprintf(arq, cmd);

% --- Write commented ac section ---
src = [
    '\n*** AC SIMULATION SETUP\n' ...
    '* SOURCES\n' ...
    '*V4 V_PP 0 {int(X24)}\n' ...
    '*V5 V_in 0 SINE(0 0.447 1k) AC 1\n' ...
    '*V1 V_grid 0 {int(X25)}\n'];

freqs = [20 30 40 50.05 70 100 200 500 700 1000 2000 2122 5000 7000 10000 20000];
base_meas = '*.meas AC f%dhz find v(out) at=%g\n';
lines = arrayfun(@(f) sprintf(base_meas, round(f), f), freqs, 'UniformOutput', false);
freq_meas_block = strjoin(lines, '');

cmd = [
    '\n* COMMANDS\n' ...
    '*.ac dec 100 0.01 100meg\n' ...
    '*.probe v(out)\n' ...
    '*.meas gmax max(mag(V(out)))\n' ...
    '*.meas AC fchi FROM 0 TARG mag(V(out))=gmax/sqrt(2) FALL=1\n' ...
    '*.meas AC fclo FROM 0 TARG mag(V(out))=gmax/sqrt(2) RISE=1\n' ...
    freq_meas_block];
fprintf(arq, src);
fprintf(arq, cmd);

% --- Write commented slew section ---
src = [
    '\n*** SLEW SIMULATION SETUP\n' ...
    '*SOURCES\n' ...
    '*V4 V_PP 0 {int(X24)}\n' ...
    '*V5 V_in 0 PULSE(-0.447 0.447 0 10p 10p 1m 2m) AC 1\n' ...
    '*V1 V_grid 0 {int(X25)}\n'
];
cmd = [
    '\n* COMMANDS\n' ...
    '*.tran 0 0.2 0.19 100u\n' ...
    '*.probe v(out)\n' ...
    '*.MEASURE TRAN MAXSLEW MAX V(OUT)\n' ...
    '*.MEASURE TRAN MINSLEW MIN V(OUT)\n' ...
    '*.MEASURE TRAN SLEW DERIV V(OUT) WHEN V(OUT)=(MAXSLEW+MINSLEW)/2\n'
];
fprintf(arq, src);
fprintf(arq, cmd);

% --- Write commented gedlee section ---
src = [
    '\n*** GEDLEE SIMULATION SETUP\n' ...
    '* SOURCES\n' ...
    '*V2 V_PP 0 {int(X24)}\n' ...
    '*V6 V_grid 0 {int(X25)}\n' ...
    '*B1 V_in 0 V=v(amp)*sin(2*pi*1000*time)\n' ...
    '*B2 amp 0 V={10m*ceil(time*500)-10m}\n' ...
    '*B3 tref 0 V={1*time}\n'
];
base_meas = '*.MEAS TRAN MIN%d MIN V(out) FROM=%dm TO=%dm\n*.MEAS TRAN MAX%d MAX V(out) FROM=%dm TO=%dm\n';
blocks = arrayfun(@(k) sprintf(base_meas, k, 2*k, 2*(k+1), k, 2*k, 2*(k+1)), 0:100, 'UniformOutput', false);
cmd = [
    '\n* COMMANDS\n' ...
    '*.tran 0 0.202 0 10u\n' ...
    '*.probe v(out)\n' ...
    strjoin(cellstr(blocks), '')
];
fprintf(arq, src);
fprintf(arq, cmd);

fclose(arq);
end
